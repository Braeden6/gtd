"""message

Revision ID: 7590a802d08f
Revises: a02e15334296
Create Date: 2025-05-19 10:49:52.381019

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7590a802d08f'
down_revision: Union[str, None] = 'a02e15334296'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('references',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ai_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reference_tag_links',
    sa.Column('reference_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['reference_id'], ['references.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('reference_id', 'tag_id')
    )
    op.drop_table('capture_project_links')
    op.add_column('actions', sa.Column('inbox_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'actions', 'inbox_items', ['inbox_id'], ['id'])
    op.add_column('inbox_items', sa.Column('reference_id', sa.Uuid(), nullable=True))
    op.drop_constraint('inbox_items_action_id_fkey', 'inbox_items', type_='foreignkey')
    op.create_foreign_key(None, 'inbox_items', 'references', ['reference_id'], ['id'])
    op.drop_column('inbox_items', 'action_id')
    op.drop_column('projects', 'status')
    op.add_column('someday_maybe', sa.Column('inbox_id', sa.Uuid(), nullable=True))
    op.drop_constraint('someday_maybe_inbox_item_id_fkey', 'someday_maybe', type_='foreignkey')
    op.create_foreign_key(None, 'someday_maybe', 'inbox_items', ['inbox_id'], ['id'])
    op.drop_column('someday_maybe', 'inbox_item_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('someday_maybe', sa.Column('inbox_item_id', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'someday_maybe', type_='foreignkey')
    op.create_foreign_key('someday_maybe_inbox_item_id_fkey', 'someday_maybe', 'inbox_items', ['inbox_item_id'], ['id'])
    op.drop_column('someday_maybe', 'inbox_id')
    op.add_column('projects', sa.Column('status', postgresql.ENUM('ACTIVE', 'ON_HOLD', 'COMPLETED', name='projectstatus'), autoincrement=False, nullable=True))
    op.add_column('inbox_items', sa.Column('action_id', sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'inbox_items', type_='foreignkey')
    op.create_foreign_key('inbox_items_action_id_fkey', 'inbox_items', 'actions', ['action_id'], ['id'])
    op.drop_column('inbox_items', 'reference_id')
    op.drop_constraint(None, 'actions', type_='foreignkey')
    op.drop_column('actions', 'inbox_id')
    op.create_table('capture_project_links',
    sa.Column('capture_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['capture_item_id'], ['inbox_items.id'], name='capture_project_links_capture_item_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='capture_project_links_project_id_fkey'),
    sa.PrimaryKeyConstraint('capture_item_id', 'project_id', name='capture_project_links_pkey')
    )
    op.drop_table('reference_tag_links')
    op.drop_table('references')
    # ### end Alembic commands ###
